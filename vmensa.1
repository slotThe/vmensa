.hy
.TH "vmensa" "1" "07 March 2020" "vmensa 0.1"



.SH NAME
.PP
vmensa \- Query the Stundentenwerk API from inside your terminal!



.SH SYNOPSIS
.B vmensa
[
.I options
] [
.I day
]



.SH DESCRIPTION
.PP
Through the power of a lonely and unwanted API, kindly provided by the
Studentenwerk Dresden,
.I vmensa
brings today's canteen menu directly to your terminal (or tomorrow's, or next
Monday's... see the
.I POSITIONAL ARGUMENTS
for that)!

Note that the "v" in
.I vmensa
stands for "vegetarian" and thusly only those meal options (plus the vegan ones)
will be displayed by default.  To make the program fit your specific diet, see
.I OPTIONS.



.SH OPTIONS
Note that, for options allowing multiple arguments, you either need to wrap the
arguments in quotes or not use any spaces for separating different items and for
the items themselves.  This is to allow our parser to properly disambiguate
between options and arguments for these options.  You may use any of the
following characters for separation of different arguments: ',' ';' ':' '.'.

In general, all arguments will be parsed case-insensitively.

.BI \-d " diet\fR,\fP " \-\-diet= "diet"
.RS
Diet to display.  The argument
.I diet
may have the following values (letters in square brackets may be omitted):
.TS
l l l .
	a[ll]	Display all meals.
	v[egan]	Display only the vegan meals.
	vege[tarian], vegg[ie]	Display vegetarian and vegan meals.
.TE

.I diet
defaults to "vegetarian".
.RE


.BI \-w " n\fR,\fP " \-\-wrap= "n"
.RS
Wrap sections at
.I n
columns.
.RE


.BI \-t " time\fR,\fP " \-\-time= "time"
.RS
Canteens may server lunch or dinner, this flag decides which options
.I vmensa
displays.  The argument
.I time
may have the following values (letters in square brackets may be omitted):
.TS
l l l .
	a[ll-day]	Display all meals.
	l[unch]	Display only the lunch options.
	d[inner]	Display only the dinner options.
.TE

.I time
defaults to "all-day".
.RE


.BR \-h ", " \-\-help
.RS
Print help information.
.RE


.BI \-\-ikat= "str"
.RS
Ignore anything you want from the "Kategorie" section.  Categories have to be
written out in full, i.e. to ignore the category "Pasta", one would have to
write
.I vmensa --ikat Pasta
.RE


.BI \-\-inotes= "str"
.RS
Ignore anything you want from the "Notes" section.  Notes check for partial
matches, i.e to ignore everything containing "Soja (F)", one may use
.I vmensa --inotes (F)
or, alternatively
.I vmensa --inotes Soja
.RE


.BI \-m " canteens\fR,\fP " \-\-mensen= "canteens"
.RS
The canteens one would like to show.  We currently support all of the canteens
that are supported by the Studentenwerk-API itself.  The following table will
give the name of the canteen, as well as all available aliases for it (multiple
aliases will be specified by tuples).  Note that, after parsing an option, we
always trim until the next separation symbol; i.e. while there is only a single
"a" in the table for the
.I Alte Mensa,
something like "alte", or even "Alte Mensa" will work just fine.  The order in
which the canteens are specified will be the order in which they are printed.
Default: Alte Mensa, Zeltschlösschen, U-Boot, Siedepunkt.

.TS
l c l l .
	Alte Mensa                     	<-->	A
	Mensa Reichenbachstraße        	<-->	R
	Mensologie                     	<-->	Mensologie
	Mensa Siedepunkt               	<-->	Si
	Mensa TellerRandt              	<-->	TellerRandt
	Mensa Palucca Hochschule       	<-->	(Palucca, Hochschule)
	Mensa Stimm-Gabel              	<-->	(Stimm, Gabel)
	Mensa Kraatschn                	<-->	Kraat
	Mensa Mahlwerk                 	<-->	Mahl
	MiO - Mensa im Osten           	<-->	(MiO, Osten)
	BioMensa U-Boot                	<-->	(Bio, U-Boot, U)
	Mensa Sport                    	<-->	Sport
	Mensa Johannstadt              	<-->	Johannstadt
	Mensa WUeins / Sportsbar       	<-->	(WUeins, Sportsbar)
	Mensa Brühl                    	<-->	Brühl
	Zeltschlösschen                	<-->	Z
	Grill Cube                     	<-->	(Gr, C)
	Pasta-Mobil                    	<-->	(Pasta-Mobil, Pasta)
	Mensa Rothenburg               	<-->	Rothenburg
	Mensa Bautzen Polizeihochschule	<-->	(Bautzen, Polizeihochschule)
	Mensa Oberschmausitz           	<-->	Oberschmausitz
.TE
.RE


.BI \-s " sections\fR,\fP " \-\-sections= "sections"
.RS
Which sections to display in the pretty-printed output.  If the users enters a
section twice, it will be printed only once.  Sections are printed in order,
i.e. in the specified order by the user.  By default, we display everything (in
order: name, price, notes, category).  Users may choose among the following
different sections (letters in square brackets may be omitted):
.TS
l l l .
	Na[me]	Name of the meal.
	P[rice]	The price one has to pay.
	No[tes]	Additional notes about the meal, like
        		allergy information etc.
	C[ategory]	Which category the meal belongs to
        		(roughly where it may be found inside
		the canteen).
.TE



.SH POSITIONAL ARGUMENTS
Pick the day (or date) when
.I vmensa
should query the API.  Defaults to "today".  The argument may have the following
values (letters in square brackets may be omitted):
.TS
l l .
	[today]
	t[omorrow]
	mo[nday]
	tu[esday], di[enstag]
	w[ednesday], mi[ttwoch]
	th[ursday], do[nnerstag]
	f[riday]
	sa[turday]
	su[nday], so[nntag]
	DD MONTH-BY-NAME [YYYY]
	YYYY-MM-DD
.TE

Here,
.I MONTH-BY-NAME
is literally something like "august".  In general, the input can be as short as
the shortest non-ambiguous sequence of characters for a specific month.  This
means "m" would not be allowed (as it may either refer to "march" or "may"),
while "o" (for "october") would be completely fine.  In particular, the
following input is valid:
.TS
l l .
	ja[nuary]
	f[ebruary]
	mar[ch]
	ap[ril]
	may
	jun[e]
	jul[y]
	au[gust]
	s[eptember]
	o[ctober]
	n[ovember]
	d[ecember]
.TE

If the year is omitted, the
.I current year
is assumed.  Note that specifying the week day will always jump forwards in
time, i.e. an input of "monday" on a monday will result in getting the menu for
the following monday.



.SH EXAMPLES
Query tomorrows lunch menu, wrapping the text at 80 characters:

.RS
.I vmensa --time lunch --wrap 80 tomorrow
.RE

Query next Wednesday's vegan dinner menu, wrapping the text at 60 characters:

.RS
.I vmensa -d v -t d -w 60 w
.RE

Query today's vegetarian menu, ignoring pasta, as well as anything containing
eggs and soy:

.RS
.I vmensa --inotes 'Eier, Soja' --ikat Pasta
.RE
.RS
.I vmensa --inotes Eier,Soja --ikat Pasta
.RE

Query the menu for the 17th of july:

.RS
.I vmensa 17 jul
.RE

Query specific canteens:

.RS
.I vmensa -m alte,zelt,siedepunkt,uboot
.RE
.RS
.I vmensa -m "alte mensa, zelt"
.RE
.RS
.I vmensa -m a,z,si
.RE

Only show certain sections:

.RS
.I vmensa -s na,p -m siede
.RE
.RS
.I vmensa -s na,no
.RE



.SH BUGS
For a list of bugs, see <\fIhttps://gitlab.com/tozor/vmensa/issues\fR>.



.SH AUTHOR
\fBvmensa\fR was written by Tony Zorman.  To contribute, or file an issue please
visit <\fIhttps://gitlab.com/tozor/vmensa/\fR>
